{% set name = "numpy" %}
{% set version = "1.13.3" %}
{% set sha256 = "36ee86d5adbabc4fa2643a073f93d5504bdfed37a149a3a49f4dde259f35a750" %}

package:
  name: numpy
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.zip
  sha256: {{ sha256 }}
  patches:
    # patches for MKL based enhancements
    - intel_mkl-version.patch # [not nomkl]
    - intel_use_mkl_fft.patch # [not nomkl]
    - intel_distribution.patch        # [not nomkl]
    - intel_umath_optimizations.patch # [not nomkl]
    - intel_mkl_mem_all.patch         # [not nomkl]
    - intel_init_mkl.patch            # [blas_impl == 'mkl' and (not win or vc>=14)]
    - intel_mkl_random.patch          # [not nomkl]
    # patch up MKL patches
    - 0001-Remove-ICC-specific-flags.patch # [not nomkl]
    - 0002-Remove-np.invsqrt.patch         # [not nomkl]
    - 0003-Rewrite-inlining.patch          # [not nomkl]

    # patch sequence switched as it is easier to apply smaller patches than
    # larger ones to the changes above!
    - osx-dist.patch # [osx]
    # customize gfortran executable that gets looked for to use our GFORTRAN env var
    - gfortran_alias.patch
    # Windows and its stupid long integer stuff breaks this test.  Just kill it.
    - nuke_error_message.patch   # [win]
    # Seems to be an issue with case sensitivity and Windows filesystem permission errors.
    - windows_case_sensitivity.patch   # [win]
    # precision issue with longdouble on ppc64le
    - 0001-skip-test_loss_of_precision_longcomplex-test.patch  # [ppc64le]
    - disable_memmap_path_test.patch            # [win64 and py3k]

build:
  number: 3
  skip: True  # [blas_impl == 'openblas' and win]
  # conda 4.4+ can use this
  requires_features:
    blas: {{ blas_impl }}
  # this is for conda 4.3 and below
  features:
    - nomkl    # [x86 and blas_impl != 'mkl']

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('fortran') }}
  host:
    - cython
    - python
    - mkl-devel  {{ mkl }}  # [blas_impl == 'mkl']
    - openblas-devel {{ openblas }}  # [blas_impl == 'openblas']
    - setuptools
  run:
    - python
    # openblas or mkl runtime included with run_exports
    - mkl_fft # [blas_impl == 'mkl']
    - mkl_random

test:
  files:
    - run_np_tests.py
  requires:
    - faulthandler # [py27]
    - nose
    - {{ compiler('c') }}
    - {{ compiler('fortran') }}
    - nomkl  # [x86 and blas_impl == 'openblas']
  commands:
    - f2py -h
    - conda inspect linkages -p $PREFIX numpy  # [not win]
    - conda inspect objects -p $PREFIX numpy  # [osx]
  imports:
    - numpy
    - numpy.linalg.lapack_lite

about:
  home: http://numpy.scipy.org/
  license: BSD 3-Clause
  license_file: LICENSE.txt
  summary: 'Array processing for numbers, strings, records, and objects.'
  description: |
    NumPy is the fundamental package needed for scientific computing with Python.
  doc_url: https://docs.scipy.org/doc/numpy-1.13.0/reference/
  dev_url: https://github.com/numpy/numpy
  dev_source_url: https://github.com/numpy/numpy/tree/master/doc

extra:
  recipe-maintainers:
    - jakirkham
    - msarahan
    - pelson
    - rgommers
    - ocefpaf
